"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.cli = void 0;
const tslib_1 = require("tslib");
const pipe_args_1 = require("pipe-args");
const yargs_1 = (0, tslib_1.__importDefault)(require("yargs"));
const helpers_1 = require("yargs/helpers");
const drawer_1 = require("./lib/drawer");
const paper75HDB_1 = require("./lib/paper75HDB");
const isRunningInJest = process.env.JEST_WORKER_ID !== undefined;
function getDevice() {
    return new paper75HDB_1.Paper75HDB();
}
function clear() {
    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {
        const device = getDevice();
        const drawer = new drawer_1.Drawer(device);
        device.initialize();
        try {
            yield drawer.clear();
        }
        finally {
            device.finalize();
        }
    });
}
function draw(what) {
    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {
        const device = getDevice();
        const drawer = new drawer_1.Drawer(device);
        device.initialize();
        try {
            yield drawer.drawSvg(what);
        }
        finally {
            device.finalize();
        }
    });
}
function cli(...args) {
    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {
        try {
            yield (0, yargs_1.default)(args)
                .scriptName("ws-paper")
                .command("clear", "Clears the device", clear)
                .command("draw <what>", "Draws an image on the device", (yargs) => {
                return yargs.positional("what", {
                    description: "What to draw. Right now, only a svg is supported. This has to be actual definition of svg, not a file path or url.",
                });
            }, (argv) => (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {
                yield draw("" + argv.what);
            }))
                .demandCommand()
                .exitProcess(!isRunningInJest)
                .parse();
        }
        catch (e) {
            console.error(e);
        }
    });
}
exports.cli = cli;
if (!isRunningInJest) {
    (0, pipe_args_1.load)();
    cli(...(0, helpers_1.hideBin)(process.argv));
}
//# sourceMappingURL=cli.js.map